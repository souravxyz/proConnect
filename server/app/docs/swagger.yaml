openapi: 3.0.0
info:
  title: Mini LinkedIn API
  version: 1.0.0
  description: A simple community platform like LinkedIn
servers:
  - url: https://proconnect-backend-7dxu.onrender.com

tags:
  - name: Auth
    description: Authentication routes
  - name: User
    description: User profile routes
  - name: Post
    description: Post and feed routes

paths:
  /api/auth/signup:
    post:
      summary: Register a new user
      tags: [Auth]
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required: [name, email, password]
              properties:
                name:
                  type: string
                email:
                  type: string
                password:
                  type: string
      responses:
        "201":
          description: Signup successful
        "400":
          description: User already exists

  /api/auth/login:
    post:
      summary: Login a user
      tags: [Auth]
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required: [email, password]
              properties:
                email:
                  type: string
                password:
                  type: string
      responses:
        "200":
          description: Login successful
        "400":
          description: Invalid credentials

  /api/auth/verify/{token}:
    get:
      summary: Verify email with token
      tags: [Auth]
      parameters:
        - in: path
          name: token
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Email verified
        "400":
          description: Invalid or expired token

  /api/auth/forgot-password:
    post:
      summary: Send password reset link
      tags: [Auth]
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required: [email]
              properties:
                email:
                  type: string
      responses:
        "200":
          description: Email sent
        "404":
          description: User not found

  /api/auth/reset-password/{token}:
    post:
      summary: Reset user password
      tags: [Auth]
      parameters:
        - in: path
          name: token
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required: [password]
              properties:
                password:
                  type: string
      responses:
        "200":
          description: Password reset successful
        "400":
          description: Invalid or expired token

  /api/users/me:
    get:
      summary: Get logged-in user's profile
      tags: [User]
      security:
        - bearerAuth: []
      responses:
        "200":
          description: Profile fetched
        "401":
          description: Unauthorized

    put:
      summary: Update logged-in user's profile
      tags: [User]
      security:
        - bearerAuth: []
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                name:
                  type: string
                bio:
                  type: string
                profilePic:
                  type: string
                  format: binary
      responses:
        "200":
          description: Profile updated
        "401":
          description: Unauthorized

  /api/users/{userId}/profile:
    get:
      summary: Get public profile of user by ID
      tags: [User]
      parameters:
        - in: path
          name: userId
          required: true
          schema:
            type: string
      responses:
        "200":
          description: User profile with posts
        "404":
          description: User not found

  /api/posts:
    post:
      summary: Create a new post
      tags: [Post]
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required: [content]
              properties:
                content:
                  type: string
      responses:
        "201":
          description: Post created
        "401":
          description: Unauthorized

    get:
      summary: Get public feed of posts
      tags: [Post]
      responses:
        "200":
          description: List of recent posts

components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
